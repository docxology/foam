all right we're live welcome everyone it's February 7th 2025 and we are in active INF for ant stream 11 looking forward to a lot of feedback interactivity and pl text fun and learning all the pushes during the stream are going to be going to the repo doxology SL cognitive and let's get right into it all right so previously on active INF foran streams we've heavily featured the cursor development environment tool and that's going to continue to be used as well as seen a little bit with code viz and that's going to come into play again and in this stream for plain text surprise education and Delight we're going to be working a lot with obsidian so obsidian at the repo or website obsidian DMD is a plain text note linking software open source and it is going to facilitate us doing some truly awesome things with plain Tex repos and playing back and forth between cursor and obsidian is going to go really far so here in the obsidian window on the left side we're looking at the same file that on GitHub can be found here and in cursor can be found here so we have two local versions of infan stream10 DMD so if we delete something like starting with a GitHub push save it in cursor that's going to be gone in obsidian obsidian uses a linking style where two brackets open up the ability to make a Linker so that is going to be reflected visually in this graph version so before we go too deep in this is some incipient exciting relevant development work it's semi structured so don't let the graph and the weave make too much light of the fact that if we zoom out of course there's more to paint into than not and looking forward to people's collaboration and contributions you can head over to the repo while the stream's happening or afterwards or if you're watching live definitely put some funny questions and ideas into the live chat and we'll bring them into the repo and that will weave that way big picture we're going to be in some ways that were not really even possible a few years ago in integrating theoretical foundations writing them on the Fly and connecting with practical implementations so we can delete that and then we can see okay now we just updated a plain text file so let's just make that push just for fun okay where do you even begin so welcome an overview of obsidian usage so this could have been typed in manually like this two brackets obsidian usage when we click on that link it's like Wikipedia we head over to this article and there's going to be links in the article the ones that are brightened are the ones where there is a page and the ones that are dim there's no page yet and so if we click on that it makes that page at the top level of the repo so we don't need that at this point but let's look a little bit at obsidian usage and this is a markdown format everything is these plain text markdown files okay so file names link directly file name vertical line Alias uses custom text if you want it to say something different than the file name and here we have some machine readable information and then over on the graph side we can filter down and try to see what's in the neighborhood of obsidian usage there's going to be a lot of active inference generative models in this stream as well but first I just wanted to start this way so here we are and when we have our cursor there we get this colorful highlight of obsidian usage and everything that it's linked to in the plain text gets rendered as an edge here so we can drag around that play with that we can okay hm okay obsidian usage plain text benefits let's check out plain text benefits wow Version Control Knowledge Management machine readability research benefits all these different benefits which cursor wrote entirely for me and we'll get to how and where that happened okay back to the top level and let's carry on with a stream so previous streams we've been using different synthetic intelligence and live chat methodologies for having a great time learning about what other than active inference and the free energy principle so let's check out those articles again these were written entirely using cursor so what that looked like was let's head over to knowledge base mathematics we can go over to some active inference article so here's the plain text article this is it in obsidian so here we have everything from software examples to it could be anything if we want to use AI to update this active inference article bring it in with control I to the composer mode and then we can say add fantastic comprehensive relevant length and structured typo new sections to the active article so now if we head over to active inference we see it's connected to a whole variety of different terms and topics and ideas so very cool how also by embedding a docs set ction there's a lot of obsidian style also just picking up from Context this is so here is Claude uh 3.5 Sonet 2024 1022 I've added four major new sections to the active inference article so here in the green are these new sections that just got added again you'll remember from earlier infer an streams where anything above like 200 lines of code was getting cut off now we're into the 1400 lines of code so that was pretty simple edit we'll accept it but it changes the graph and you can watch cursor modifying files and then it's popping up and the graph topology is evolving so here's free energy principle and these gray nodes are all hypothetical links so they're linked kind of um in a preemptive way we can turn on to just existing files if we want to look at the more dense weaving of okay well how about variational calculus this comes up like all the time all right here we have different math different examples different applications of variational inference and these on a line by line basis can be vetted in different ways and researched by different individuals so if we were like tags I I'll add a tag whatever it is and then that can be versioned and if people disagree they can use the other version of the plain text file hey Andrew yeah there's going to be some really fun applications here okay so let's now go to the agenda so free energy principal article just briefly also super long article with all of this machine readable information we're going to explore explore a bunch of fun plain text oh and that change so here's where we are here's stream 10 Connected To ACM and F and then when we delete this line it disconnects um briefly going to go through the dock part of the repo to show a little bit of the meta structure on the cognitive repo and then we're going to get into pdps partially observable Markov decision processes our favorite kind of dropa model creature for active inference and ants and bioherms and more oh brother so here we go first into the uh this config folder looks empty could have been it's a simulation config we'll leave it there for now maybe it's not even important okay here's a documentation road map here it is in cursor here's documentation in obsidian and a readme for the documentation some of this might seem like Overkill however ever as long as it's accurate and gives linking valid structure this is incredibly effective with cursor and composer so first API that's not really being used at this point but there's a lot of discussion around agent apis and so having these comprehensively linked versions of files in plain text super powerful but not really going to come into play here Concepts this is just documentation for Concepts so that are relevant for the package but not scientific Concepts per se more like Concepts that are relevant for the documentation at a meta level so that when we say well we're really interested in machine readability that kind of semantics is going to get across just fine but if we provide a ton of linking so that machine readability is a full knowledge node then it can be even more effective and it can have these mermaid diagrams so then when we're giving a talk and we're going well free energy principle we want to have reproducibility and research integrity and that's why we're studying this cognitive phenomena with machine readability those are just paths Just Around the Horn 643 double play um examples these are some examples of documentation again it's really not the most exciting afternoon reading per se but it gets really far with helping cursor guides these are guides for different micro standard operating protocols for cursor and agents and these can be taken out to extreme levels of intensity so again it could be followed by a person or it can just be used with these absurd levels of hierarchical dispatch research here's an example of a research plan that was written for the ant colon simulation that we might look at later templates these are template for different folders of the knowledge base repo component that we'll go to in a second and then tools so here's some hints for cursor and the cursor files information that help development in this augmented Niche and it can be used also to list other autonomous AI tooling so it could be like search literature database or drive numerical belief from natural language any of these things that people have been exploring for years and also using obsidian so let's just make that file longer obsidian usage make this obsidian use file much comprehensively longer and with some relevant linked files comma make them fully so this is using the agent mode which right now only exists for the Claude family I believe however we may expect and prefer not so long when many of these models from the open AI family from the Google from various other labs are useful and integration with local language models all these kinds of things are more and more useful and possible every day so I'm in the slow usage tier in the slow lane right now because of what has been happening over the last several days we'll just let that cook maybe it'll make some changes while we're look at it but let's carry on for now okay that was just the documentation folder structured approaches for building documentation and advancing documentation from any current state and forensically reconstructing documentation these are some truly incredible opportunities okay now we get into the knowledge base itself things is where we're going to see the active inference models but I want to walk through these top sections CU they're really fun okay let's go over to systems theory so here's systems theory we can see already that it's going to link to cognitive phenomena it's going to link to swarm intelligence it's going to link to to an index file so here's a short Linker article on systems theory and we can follow some of these links like how about information Theory and we can follow this all written iteratively through cursor and every single line could be checked there could be a person there could be any number of other approaches here's what the obsidian update is doing so it's like okay and it gets it that we're within an obsidian repo so here now it's updating the obsidian documentation for itself there's probably some points of diminishing return but it just wrote several hundred lines and then now it's going okay well let's make a new linked file for network analysis so here it created this whole new file for network analysis very of course meta since this is what's happening over here and that that can be done in multiple different Maneuvers by one press here so these are new articles that it's writing okay back to the knowledge base here are the different areas citations I've left empty citation format and bringing in full text that's a whole another topic not not for this repo this time um there's agents which is documentation on specific agents so here it's a full article o and s space uh o o I added just manually to as an example of one that we can uh build right now s space this is a whole article with linkages on S Laten state or hidden state so we can have mega connect with the active inference ontology and this helps entrench different understandings so that when it's like a matrix here's exactly what the structure is this it repeat giving multiple explanations so it is wild times for years it's like well what really is the a matrix or what is the or how how are different ways to write it or what letter should we use or what's the most interesting it's like we're kind of in a position now where it's more about the underlying entrenchment of understanding plus perhaps we could say the crystallized or classically modified understanding of each of these variables and then the more fluid situational and contextual deployment of these structures so let's have the oace article get written so in agents generic PDP space here write the o space article fully about the observation space okay so now we're looking at this graphical relational Matrix describing the knowledge Network describing a PDP structure so here in the PDP structure it's like hey when I say PDP these are the components that I mean so oace was empty it's still getting written but we're going to see the graph structure change let's see if we can catch it live changing now oace has been written 234 lines so it relates to all these other topics so there's like a two-way mapping okay I guess observation it does relate to this concept of observation structure should we have an extensive human Human Experience debating whether or not observation structure should be its own page or this page or that page or the first slide in your presentation or this or that it's like maybe not but having it as a hypothetical node that we can continue to unpack iteratively and crawl through is it's another level and type of post Wikipedia knowledge engineering but maybe bringing back the relevance for Wiki and and pl Tex collaborative design tools as well so here we are in O now we can see the structure of the PDP flushing out so we were looking through the generic PDP documentations like levels of documentation that I don't even know have been seen for some of these topics because we can always just go into a given Matrix vastly expand the comprehensive article on B Matrix these are the kinds of thrilling articles that I'm sure many of the listeners and viewers and live Chatters love to write in in their uh spare time but uh now we are getting assistance with writing these fun articles let's look at the B Matrix and it's going to be evolving its topology so that's the PDP we also of continuous time agent that we'll get to uh citations again there's none at this point cognitive cognitive uh there's a variety of cognitive mechanisms there or cognitive phenomena this is very similar to the work we did in the atlas project at cogc related to pattern languages for cognitive phenomena so here in the cognitive phenomena so here's the improved extended article on the B Matrix so there's more connections to computational topics more connections to how we like to see it implemented more math foundations and then someone can spin it however they want like you know the classic right the who's on first to understand the B Matrix from a perspective where I don't know much math past middle school so custom generative multilanguage multimodal educational materials is in the game updates push it to GitHub so it it interpreted that perhaps because of the previous context with writing a new knowledge format so it's going to write a new document called B Matrix Basics so we'll see what it comes up with there um cognitive phenomena let's see it in cursor cognitive phenomena here we'll use control K so we can do inline coding we'll say fastly add phenomena to this list here's B Matrix basics here's the B Matrix Basics fun relatable blogs of any format to work through and ask about back in the cognitive phenomena world still in slow request Lane but we have 500 lines of cognitive phenomena some of them we already have nodes Pages for others we don't but you could imagine iteratively applying prompts where there is a page with no information Please write that comprehensively vastly excellently professionally Etc so that'll update cognitive phenomena um but back to the cognitive phenomena folder we have all these kind of like here's a empty one but all of these on demand articles so almost surely trained on a variety of articles about ants and Collective behavior for example but at the same time this is coming up with machine readable schema and ontologies that you could have all the mycologists in the world in a room and what they know of might come up with a very high correlation of these terms and then it's always possible to just add more terms if someone says wow it's like well they they really came up with a new term that should go here and then that's where you can just add the new term directly and then build on the page and then you have the page template and then it links to the documentation and so on so cognitive phenomena just a bunch of times I uh iteratively applied a few prompts just to get it to to make these kind of Wiki style articles on all these different topics whether more as a Linker which is good for making like a beach head into a new epistemic frontier or a more advanced article that has uh visualizations I think for the cognitive phenomena one I was just interested to get it to link as much as possible which is why it has this list format but then you say for every single bullet point expand that section so that it has three sentences and then next prompt every sentence split it to reify the main point with an example that's the cognitive section okay mathematics so here it's pretty fun because the the latc rendering is so nice we can look at belief updating math code connections how about compute expected free energy well here's the definition of expected free energy in terms of epistemic value and pragmatic value so we have this more Wiki documentation page but then when in the active inference page it says it's going to use use expected free energy and then that is linked strongly to the expected free energy page and here's what we expect from expected free energy so then when I prompt somewhere else something like make an active inference model or make an active inference PDP model of this or that situation these highways and highways are right there to trace it back to where we have a human interpretable versionable document so again the era of like what is the best way to convey expected free energy it's like after what's happened in the last 48 hours in my experience I would say in plain text accurately coherently professionally Etc and then with this generative layer around it that is able to recognize the query and then connect it to what's relevant to generate but if we just dip our Ladle into a given llm and say what is expected free energy it it might give us a totally valid response it might give us a semi- memorized response from a paper it might come to a emergent synthetic definition from several papers finding a semantic interpolation that might be a better version so it's it's not that anything else that's not what I'm showing here is ineffective it's that if someone's like I like this notation system or this should be included we can just very modularly put that right into the plain text so then if we want it explained and say explain this for me as a enthusiasts of topic X maybe it'll make a new file let just see if it gives a funny shot Ju Just you know what does it even think these symbols mean I don't know all of us are learning but again these are linked topics and so I was just studying and learning going okay well okay so free energy okay we can ask it could be in here add a section conveying at a big technical Picture level what makes something a free energy who hasn't had that question so we just keep adding information a b Matrix Enthusiast whoa okay let's look at the B Matrix Enthusiast briefly that is in the generic PDP guides as it basically should be here's the basics here's the who's on first style blog not dialogue and then here's the B Matrix enthusiast if you've ever been fascinated by how things change over time whether it's weather patterns stock markets or even your favorite video game characters movement you're already thinking about State transitions the B Matrix is a powerful tool that helps us understand and predict these changes why it's cool and then it's like it is so cool each of these topics really is so cool and we move around them through them in them on them all that um we could write all the rest of the generic PDP en Enthusiast files comprehensively fully and light-hearted it probably doesn't even need the accurate information to be also in the obsidian repo but it's like if this is the stuff that we've already looked at then it it definitely doesn't hurt and then it's on the cognitive repo anyone can just download this repo as well as make their own all of this open source great times and then supercharge their own llm use so that if if we say um make a who's on first dialogue about an elephant that is using a b Matrix to build a bridge but if we already have elephant B Matrix build a bridge who's on first as their own nodes in a graph then it's just going to be so much better and so much more reproducible observation space it's like how how could and fun okay back to the repo then we'll get through these guides and into the uh simulation section so again these are like on demand learning articles that can't be necessarily taken at 100% accuracy however the same could be said for any document and these have the ability to just interactively make diagrams links um so for example the path integral work this is some recent work in active inference and Fe that no one is born do so how can we learn this well there's going into a search engine and trying to find documents based upon backlinking or semantic similarity and then reading the primary words that were on that page there's trying to find a textbook maybe you have physical access maybe you have digital access it's like or we can kind of spin out a neighborhood like I did several uh times next to the path integral so connect path integral to the FP and then okay well it's in plain text here but I think if it were clearly linked there just little Nano edit I didn't even have to know about the path integral didn't have to write the paper but just that's a little modular edit that changes the topology of the network that helps everyone learn and apply all these topics so it's like or what is an action principle these are just things that can be asked in so here's the oace Enthusiast okay it wrote A S and O here's what makes something a free energy so interestingly this is common erir it also deletes a bunch rest of content remains unchanged so we'll reject that edit but some of these things are just little little road bumps on the speedrun here's the cognitive phenomena we said add add phenomena to list okay again here's a long edit that that it it K the control K mode does that sometimes so look for that but um these ones we just added dozens of Articles and then we can have an iterative prompt or an iterative script that says go to cognitive phenomena check to see if the linked file is comprehensively written make it better use an internet search or use your local information thoughtfully with whatever it happens to be and you're just expanding your knowledge base um which you can start from scratch or you could pull what is in this repo already um okay so that's the math learning component how is how is the tailor series related to The Continuous time agents operation in generalized coordinates also something that many have wondered these are specific questions that it's it's like okay that was a question about tailor series expansion generalized coordinates continuous time active inference agents those are on one hand big lifts initially but on the other hand they fit so nicely into our working memory and certainly into the context window of these synthetic intelligence artifacts so we can ask those questions either directly let's ask that exact question in a new composer window see what happens how does a how do how does a continuous time agents in active inference use Taylor series expansion for navigation and intelligence in generalized coordinates that question could also just be typed into or spoken to any other llm interface but here first off we could be working totally offline and locally with a local llm in these plain text open source files or we can be using what whatever it is that's happening here so again just like what are we uncertain about what are we curious about what would be learning and on the edge for us and then meta cognition we state that that's an action coming from us and then write it don't just let that uncertainty dissipate and then like okay I have this reflex like it looks hard this looks like it's going to be hard to read and learn so at that point it's like is this a lift that I'm ready to make at this Nano moment am I ready to read about this or is it like good enough to know that there is an answer and maybe dump it into a text file for later or maybe um I'm I'm still struggling with this can it be made into a who's on first style dialogue Etc so that's the math uh and that's the knowledgebase part so this could contain summaries or semantic embeddings or full texts for different citations and different resources here I just did totally abono from nothing of all of these articles related to fun topics okay moving on past the knowledge base here we get into the SRC or source file here is where we can start to explore reliable dis hyphen intermediated calling of abstractions for operational approaches to active inference systems engineering so this is a dispatch it's kind of like calling operator let's see it in cursor okay here we're looking at the AC inference dispatcher first let's just look over in the graphical view what's the neighborhood of the active inference dispatcher so these are just some related topics okay what the active inference dispatcher does is it picks up at the linguistic semantics of the active inference ontology and then creates Runners through dispatch that send off to implementational methods so if we say I want to have an agent that uses variational free energy on perception for updated sense making and then you could imagine whether we ask or state or it asks us it's like okay let's do a binary State space so it could be zeros or ones coming in for observations and then later we want to add or change that to be in a continuous State space like between zero and one but also for those continuous values we would still want to be able to use the semantic dispatch of variational free energy but under the hood it's doing a different kind of implementation because of it for example being continuous versus discrete so that's what this dispatch intermediation is doing and similarly like for the biofirm this is a canvas this nice feature of uh obsidian take whole articles and lay them out like this um as well as link them to to non articles similarly for the biofirm in the dispatch here is kind of like an interface between the highlevel semantics qualitative linguistic and specific opinionations and routes for lower level implementations someone someone says I want a red adaptive funny sedan someone doesn't need to say what is the chemistry of the red paint such that it has this wavelength of light under it's just like well we could list out multiple options or one option or you could just hard code and say oh when people say red they mean this exact kind of iron oxide you you could you might not be wrong in a give situation you might not be wrong in a whole variety of situations but it's not the most General systems design approach so these SRC files are like a repo of tools that we want to use four different kinds of methods that come into play like Matrix operations so then there can be a matrix operation like transpose Matrix and let's just say that there's two methods at our disposal and one of them works well for small matrices and one if it's a big one so then in the outside of the SRC folder at the semantic level someone can say transpose this Matrix at this point in the program's logic and then the dispatcher sends that to whichever implementation is most relevant given some other criteria so that that's a little bit of a stub folder there not a ton in there but the the dispatch concept is going to be critical and it's an example of something that's enabled by the active inference ontology okay templates agent template belief templates these allow a variety of things again they're just examples of templates but since the nodes in obsidian being plain text files can also be anything templates can be wildly useful because then they're used for so many things okay now let's get into some of the code sections for tests all right so uh obsidian maybe there's some way to configure it differently I just don't have set up right now but it doesn't display python files so here we can see that in the tests folder and in the the GitHub repo the all the files are there but obsidian focuses on the markdown so pros and cons to that but it's all good um let's uh open it and see what this does okay this is a test Suite okay made some errors start a new compos window and while it's fixing that let's look at the outputs so these are some package level tests just doing some Matrix visualizations different kinds um of simple visualizations and analyses so not not super complex but the testing framework is actually slightly more complex than that so it can be used in a variety of ways all right now we get into the things this is exciting because it it it also is pleasantly surprising truly how rapidly and absurdly some of these programming capacities are advancing so I'm going to start with possibly the most useful of the things here which is the generic PDP while it's fixing the tests over there also in the uh settings there's YOLO mode where you can allow the commands to be run so here it's both able to propose and then run and then get the terminal feedback and then continue to iterate in this closed loop so the compo the agent mode is like an order of magnitude or more faster and now it finished all the tests great here's what we did but that might have taken me several key presses I know I know several key PES to get to even that and maybe I would have said something in between that would have sty it you know or maybe there is a place where it gets itself into a cold Zach and and I could have come into play but suffice to say in this situation for doing a uh hierarchical debug on the testing infrastructure for a whole package I would not have been able to do that with just one click even in cursor a couple of weeks ago probably okay let's go to the generic PDP so this is an example of using generalized notation notation GNN for specification rendering implementation execution uh analys visualization of active inference generative models this is building in a very fun way on the work with yakup from several years ago and a lot of contributions that that uh in questions people have had since for making these obvious either manually crafted or llm based transformations of specifications into plain text formats that we can then render different kinds of models from so here up top the the lower parts are um some of them are are not used at this stage in this version that I'm putting out others are used to specify visualization so this is kind of like a whole um generative model level config like learning parameters inference parameters but the minimal config stuff is up at the top which is the state spaces so here we have and this this gets back to our um o o space enjoyer um B Matrix Enthusiast and so on we are stating the number of discrete options for observations oh space the number of discret Laten spaces how many actions at each time step the agent has how many total time steps the simulation is going to run for the planning Horizon for the simulation which is how many time scales is the agent going to combinatorically do policy proposals for um and some other features so where this is going to go and then we'll run it is here's the the plots so here's an overview of our agents here's uh uh 5x4 a matrix up on the top left here's just one action from the B Matrix but we could look at the whole B Matrix three actions these are the the B matrices for each of those three AC so pick like a slice see just in this visualization it's through time like time step uh 0 1 2 3 4 because I did have preference learning fully operative and wanted to prune it back to simplify it just a little bit so now it can graph C preferences through time constraints cost but it's fixed Through Time D is are prior on those four hidden States so that's uh flat and then e are prior on policy and that's initially flat okay so these are just the sub components different outputs from different belief updating through the 10 um the action distributions but the the visualization that is new even to how I've seen what it could output in the last several weeks is here we're we're looking at three affordances per time step and then we have the pragmatic and epistemic components which are the ep the the expected free energy hashtag look at that article playing out through each of the time steps so here's a four planning Horizon and this is like do you go low medium or high and then here's low low low low low here's low medium high low so let's run it so in other words this is the whole policy tree roll out for a generic PDP planner just from using generalized notation notation in a well structured Niche with some of these open source components not even using pmdp or any other kind of uh technique so let's make a new generic PDP let's do six observations projecting on to three latent states with two actions for 15 time steps with a planning Horizon of five okay here first what it does is it does a sequential test Suite where it starts a testing session using the testing infrastructure then it goes through and lo logs these sub fully realized models like let's build the Matrix and test the size let's build it test the size visualize it and so this helps iteratively building and coding as well or let's just do one belief update and then see if it went the direction we thought it was going to go so now it runs through and now it's running the full PDP and then it's going to be outputting so previously there was um five four and three five observations four latent States three affordances which is why we saw that Tri forcation in the policy roll out visualizations now here here we see policy bifurcation because there's two affordances per time step so here we have low and high of low low low high low and so this is a way to see the expected free energy and the components of expected free energy for a whole policy tree rollout I don't know if that has been done even of a few weeks ago and as kind of expected the ambiguity Rises at least in how this is visualized so that took 76 seconds for running this testing Suite that ran an informative sequence of events that began with just testing whether the the Machinery was in order then went on through building some of the sub componentry operating them for short periods of time and then working its way up to ultimately something that is outrageously useful for the octave infrance which is holographic representations of policy tree rollouts with defined epistemic and pragmatic value components and their balance so that's a generic PDP and then to not leave obsidian out in the cold here's the read me here the read me is written like software style but we could improve it like that so then we have a a clear link going from well here's the readme for how the pdb is applied in that folder and then here's the bigger concept a matrix it's like what about the a matrix oh yeah it defines the mapping between hidden States the s space and observations the o space what's the s space Oh yeah it looks like that so it is just tracing around all of these different aspects of the total semantic space but we have ju deposed here docs which are the ultra implementational or meta implementational examples and concepts for this repo as repo then there's the knowledge base ranging from the statistical mathematical foundations on through the agent level documentation and including both technical definitions like what is a b Matrix technical as you want it to get and then what is an educational curriculum for every single possible of this for every single possible of that and then through the SRC Dispatch Center we can have these implementations that can be used in a super Standalone way or in a really integrated way so let's just look at a few of the other implementation this is also a kind of generative model that I've never built before and it's in the continuous time setting okay so this one we're in the continuous time setting and let's get the test started so running the test Suite in the continuous time setting let's see it looks like over in obsidian okay here's the continuous generic model so just like that generic PDP was for discrete time discrete State spaces partially observable marov decision processes generalizations including planning and other cognitive phenomena # cognitive phenomena here is continuous time continuous St space active inference agents the agent learns and operates in continuous domains using modern deep learning techniques while adhering to active inference principles so it's going to have these techniques and again because it was in a little code Corner the read me reads more like a GitHub read me read me than a obsidian but we can quickly evolve that by saying also write a mega obsidian Style densely linked comprehensive continuous time model here connecting to and I'll just drag in docs a whole folder and knowledge base so let's see what it writes there um but meanwhile back in the test Lance so initialization shift operation sensory mapping just the perceptual sense making Els of the continuous time situation then one time step of tailor series expansion one free energy computation one belief consistency check and then several more sophisticated tests leading on through ultimately to tailor expansions in generalized State space so here the model has I'll just pick some random variables this might slow down the the computation fastly three latent uh two latent States three observations four orders for the generalized coordinates 0.01 time step for integration let's rerun the tests so that took 94 seconds to run the test Suite with that previous one so meanwhile over in continuous time active inference so here's the obsidian style article that it wrote on what we asked to write about so let's check out the neighborhood of that article here's our big knowledge Network and see if we can find and there's the Red Dot so here's continuous time active inference and here's how it's idian linked to all these topics continuous time active inference free energy principle okay all right now we'll start the tests but meanwhile let's look at the outputs from the previous continuous time testing okay I'm not even sure what these May yield okay some pre-flight checks on sensory mapping how accurate was just our input versus output was there even the right correlation direction for sensory mapping shift oper I don't know what these numbers mean in the Json format but you can ask please improve the tests of continuous time agents to yield many more visualizations okay but while we're looking at the previous versions of the code okay phas space predictions now maybe this was just when when there was only one or two orders for the model we could have just been fitting free energy generalized coordinates to a point which might be Overkill maybe we could have just identified the point but some of these visualizations like being able to identify the gradient following and the solenoidal iso Contour following in a continuous facee space okay this GIF looks like it opened for a second though it was just showing well let's see okay that took 104 seconds so we we slightly there's this GIF it was being Rewritten while we were looking at it okay so maybe it was just a weird uh corner of State space maybe there's some Mis implementation of something maybe it doesn't but you know we're we're in the ball harmonic motion okay Maneuvers in state and phase spaces and Taylor series expansions so this looks like it's doing a two order expansion with a position which is like the first moment of the Taylor series and then the first derivative the velocity and again maybe these numbers are hardcoded maybe the implementation is not perfect maybe it's not General s so on but the infrastructure is in place for building these things okay now the test Suite has been graciously added with these several hundred lines we don't even need to type it in we could have said continue to to run that by yourself okay uh I'm going to just briefly show the other things uh the biofirm and the ant colony and then open to whatever ideas and questions people have in the chat for which um obsidian neighborhood should we build out which things should we build for coding like here um okay first ant colony this one was almost in one shot I just said write or read me and then fully totally actually Implement an ant colony active inference multi-agent simulation so the kind of thing that that was years of wheel spinning in 2017 18 19 20 21 is being semi-autonomously one-shotted by just a hope and a dream um let's just see what it output I don't know if it has run basically it spins out the schema for a whole multi-agent simulation now is this going to be compliant with insert your own favorite multi-agent framework no not necessarily however if in the document mentation we had a a documentation for that and it was linked to multi-agents as one of the ways to do it or the way to do it then it would be structured that way let's just see if it's already operative okay ant colony we'll run setup just to see if it needs that okay maybe it needs commands let's just see if simulation works okay it's running the tests for the continuous generic case over off to the side but it's like and then already you can see how what I'm doing and showing with only one and a half autonomous agents at any given time it's already like the Farmers Market local organic low throughput version because why not just have this dispatching truly programmatically without a graphical interface or why not have it um in any number of other pretty adjacent ways using the computer operator using just uh headless machine using just uh GitHub agents so many ways to do it okay so now it's it is proceeding through the extended test Suite with A continuous time setting but let's just pivot over to the ant colony to see if we can get some ant gifs on screen ensure that running this really does fully implement the total ant colony simulation yielding sophisticated analysis and many hilarious do GI so we'll see where it gets on the ant colony but meanwhile over in the biofirm land so biofirm I in one sentence summarized our work on the biofirm project and said write a read me and then spin out to according to how it could be make it happen something like that so it's a homeostatic control model biofirm using active inference principles for Biore region management this implementation demonstrates how active inference can be used for maintaining system stability through partial observations so the biofirm implements a PDP building copiously off of of course the simple and the generic things already in the adjacent folder and all the knowledge docks that we already looked at it's going to use an a pmdp to do this Biore Regional homeostasis the model aims to maintain system in homeostatic range by one making observation from a simplified three-state observation space or we could combine homeostatic Biore Regional nested stewardship with the generic pomdp so then it could be a different observations space but just to fix it for this current time two inferring the true underlying five State environments so here and and meanwhile an Colony autonomous operation ongoing here there's three observations we're getting like we're getting high medium low from the thermometer and then there's five latent States so it could be off one end or off off the other end and then there's also these sort of threshold regions with on the lower and the upper bound you know or you could have five observations and three latent States that's why we need these plain text formats and that's why we've been developing them for years because it isn't enough to just say well let's put at three again you may be more than right in a given situation but the bigger picture is doing meta parameter sweeping across configuration spaces for even what one agent's cognitive model is structurally let alone quantitatively so three the biofirm selects then actions from a set of three decrease maintain or increase to keep the system in the desired state so it continues to go through here's some of the technical elements let's read this read me in see you so similarly this one could be enriched with visualizations and all of that make it a little bit less like uh code read me a little bit more obsidian formatted um and what it runs let's look at some of the outputs from the biofirm okay Granger causality transfer entropy on network convergent cross mapping not sure what this one would be causal impact not sure if it's calculated accurately or in any specific way but this brings us back back to the dispatch operator like causal impact doesn't just have one formalism that's why there was a great work in a live stream with like the 18 def different uh definitions of surprise so then all of those can be held up and then there's a dispatch that mediates the semantic use of the term surprise and might calculate all 18 or maybe seven of them only apply to discreet so if it's continuous then they're just not going to be calculated or there's some other preference or you pick a random one or you pick a different one or you can pass it as an argument like which surprise concepts are we working with but all of that is only plausible within this space where we have the dis hyphen intermediation of the dispatch caller okay causal intervention restoration we can look at the logic of what these simulations do okay those look all like the same kind of plots just with different um different interventions possibly okay fractal active inference D trended fractal analysis DFA analysis H exponents looking at the roughness of a path looking at correlation scale-free correlation Dimensions looking at the fractal power Spectrum intervention Management in the fractal setting this looks like still mainly in time but maybe this is spatial then here's free energy terms again maybe today this isn't exactly the perfect representation or calculation but already with a self-improving dispatch agents and operator were wildly further than we were a few weeks ago okay hierarchical active inference we could say make an obsidian file that represents the topology of the biofirm simulation okay information interventions on network let's add like a earth plotting component or something but it just okay that one looked interesting so some some simulation some oscillatory simulation is happening across three scales interaction efficacies and strengths this one could be like a Pokemon character we could evaluate like farmworks different kinds of interventions and treatments and and contexts these are a tractor Landscapes we can we can dig down we said for every single method used in the biofirm write a mega amazingly linked article with obsidian format okay briefly sidebar over with the ant so it got 25 call deep and then cursor please ping us at high cursor. if you think we should increase this limit I would like to imagine the limit being increased if you need more tool calls please give the agent feedback and ask it to continue how relatable let's just run it from the terminal again fix this comprehensively okay so now while um Dr Claude is working on the and let's continue with the bioferm okay igen values for stability detection on dynamical landscapes valid relevant analyses okay looks like a vector field representation are these points accurate they look pretty similar but maybe we were in a configuration set where they went similar okay and then this is almost at the end of the outputs from the biofirm wow if we are to take a plain reading of this we have um heat map coded intensities blue low yellow high then in four semi discretized chapters across these 120 scales through time there are these repeating defraction patterns like something is happening very optical illusion like it's just a straight line across here but when I look at it it looks like a sine wave and wavelet Power Band analyses so the kinds of background questions that somebody might have like how does variational free energy come to matter in this biofirm implementation that's a great generative AI Direction Venture and then there's also all of these development the vibe coding all these different development directions like now please do this for this region or please now I have this many of this sensor and this many of this actuator so that's uh where the biofirm got I uh played around with this biofirm specific active dispatcher so let's just take one quick look at what the dispatch looks like here we can use different inference methods so we might want to sample from a distribution but even from the very same distribution we might want to also do a variational belief update depending on what we had at hand at a moment so again that is where this dispatch dis intermediation comes into play where it lets a high level understanding of active inference like reflected by the ontology be a applied through the strong engineering of how the dispatch maps from the ontological semantics on through the implementational pragmatics so here are these different dispatch calls and this is again just to keep it local with an active inference dispatch template but as more and more things get made and tested and open source explored you can imagine that in the SRC it's possible to work out some very generic dispatch methods okay so um in the last part of this stream we will sort of half-heartedly see if we can get this Mega ant colony simulation going as it continues to spiral and uh selft talk but meanwhile let's push GitHub update take a sip of water and then if anybody has any questions or ideas definitely write them in the live chat okay let's make a new thing path Network okay okay I'll write out the prompt that uh I eventually want to use we'll see if the ants agents get where it needs to be in the next uh minute while writing this prompt uh then we'll let it finish and then we'll dispatch this prompt to see if we can oneshot a thing that does something so okay see this part of the the zero lag okay milliseconds of lag between applying the edits on a whole folder and then running it again and then instantly picking up with the error so that's like where Vibe coding is about the Vibes for us humanss but it's a different vibe for this operator over here so okay here we are in path Network we want a simulation where a an arbitrary ology randomly initially generated okay here we go did we get there with the ant 25 we hit the limit again do we do we roll the die one more time it's tempting fix this comprehensively and totally run the ant simulation okay let's let it just one more and then let's write out what we want for the path Network meanwhile though for anyone watching live write any ideas or thoughts for what we could do for the obsidian knowledge element or for some kind of active inference simulation um we we could do anything we could front run we could back run we could back fill front fill any of those we want a simulation where an arbitrary topology randomly initially generated of nodes reflecting their communicative effective causal Mutual influence is generated and simulated each node is a continuous time active inference agents different nodes have can have different relations with the same underlying inference methods for example different time Deltas of integration different levels of tailor series expansion for generalized coordinate coordination inference uh anticipatory inference at a big picture level it is like there are nested sine waves that are the level of water in the world all of the nodes are like ships or towers that are doing this real time inference on how much to asend or descent in order to stay with in tolerable limited range of the overall sea level which floats all boats so we're looking for this Absolute Total simulation we know you can do this we expect you to do this all in iteratively thoughtfully oneshotting this whole issue with initially writing a markdown obsidian style schema centerpiece and then actually comprehensively proceeding from there given the Arc of development outlined in that very same initial markdown Mega prospectus okay ant simulation another day new agent okay make it happen thank you okay here we go all right while that is on slow mode we'll keep watching it from the side okay so here initially as requested it first lays out a file structure for this package subpackage informed package core components okay continuous time active inference agent Network topology environmental Dynamics inference methods okay phase one so made the requirements text file now phase one like it is moving quickly through these phases let us briefly return to the live stream top level okay we in this agenda did talk about active inference we talked about free energy principle a little bit and gave ample cross linkings and applicable strategies for those wanting to model within we talked in terms of the things about the continuous generic model and the generic PDP there's also a simple PDP which is um let's just quickly look at the output this is just for learning the basic PDP this is a useful Learning Resource and it just gives a example of an active inference PDP agent that you can ask questions about and all of that it doesn't use any other uh packages or anything else like that okay and there was the generic one then there was the ant colony simulation that our agent was still repea L hitting his head against the wall 25 or more times against then there's the biofirm which was doing the active inference fractal okay Cod this let's do a quick code Vis with our we have one free flow so okay okay let's say given the fatality of the situation what would you do honestly comprehensively say about the topology and geometry of the package okay we're going to see what code Biz does here um we talked a lot about the PDP and the matrices looked at some of the implementations for the matrices talked a little bit about the testing Paradigm and the runner and the dispatch operator Paradigm practical these examples I guess are places where it could be applied but they weren't applied today visualization methods we saw a bunch of visuals future directions extended functionality performance optimization additional test cases documentation improvements Community engagement contribution guidelines issue tracking feature requests collaboration opportunities okay repo information next steps references and notes so jump through that okay here's well let's look at first code VI while okay path Network looks like it's basically done so let us uh okay it still is generating en code this let's see what happens with path Network okay okay just running the requirements installation script okay looks like either it's not going to work or it will work and the example okay Python 3 okay comprehensively continue to fully develop the example so that running that one line in terminal alone fully logs totally and outputs safely all the visualizations and okay Andrew wrote broad intentionally semi vague question what do you think about using your repo for generating simulating environments you've already spoken on it but what's next what's still obscure good question so it still takes its time um I think that it will be interesting this not in response to the question but just obsidian linkage the topology of the obsidian network is only strictly which use the obsidian linking the double bracket format so that's great it's also slightly different than a hypertext link it's slightly different than other kinds of links that might exist so this not the only way to link but it's cool that um it's so amenable to cursor's creativity and it could be in a more advanced setting flipped out with other plain taex benefits or other linking paradigms so just to say that code viz which I am excited for the development of I believe it offers a contrasting possibilities for structural and topological invest investigation of complex knowledge bases and I'm really curious to see how it goes with their development of labeled edges and some other features because it could give us these kinds of systems diagrams hopefully that would complement different kinds of static analysis and knowledge-based style linking amongst componentry so two files might not be um link to each other through obsidian but they might be very very related from an actual functional perspective so if those kinds of hidden functional relations can be inferred with Cod Vis and then meanwhile we could use plain teex style strategies for knowledge based linking and change among plain text formats it would be wonderful okay let's see where we can get with the path Network see where we might get with the environment and then see if anyone else has funny or interesting ideas from live chat okay okay looks like now it uses a shell script to run let's just look at it first sets up a python virtual environment installs dependencies runs the simulation let's just see if we can run the simulation by itself okay all right okay while agent is fixing the simulation yeah generating and simulating environments I think here we have a lot of fun research and work I guess uh my broad intentionally semi vague question is are we not just talking about the other side of the coin I mean single or multi-agent design is like what we've chosen to Ladle out from the total scenario and if we're going to be talking about what we've ladled out and what we have left unlad and we're looking at it from both sides and perspective swapping then the difference between environmental modeling and agent modeling is going to blur yet still remain in practice totally precise but for Alice and Bob interacting acoss across the interface whether a third party Observer or one or the other asserts thems to be the environment or the agent or they both think they're this one or that one or they both think the other is that or the other I don't think from a category Theory SL systems engineering SL marov blanket perspective it's going to matter too much implementation Al so rhetorically or for a given audience or domain their entire understanding May hinge on what the agent and what the environment is what scale what side of the wall and all that however that wouldn't necessarily break any symmetries regarding the formulas okay and now we're back with the path Network clear it run the example okay this is a common error it will often use like a certain visualization backend initially that doesn't work on my computer doesn't work on Linux or something like that um and then it figures out oh we're going to use this other visualization back end but that's where having this Mega documentation so it's like when I say visualize here's what I mean by that or when I say make it like a gif here's the here's some good code for doing that so then instead of being uh Loosely associatively dipping into the llm semantic space there's an in context option for transfer learning okay let's just roll the die again and run it cleanly thank you for the question Andrew Gomez thank you for joining appreciate that xcq thank you you hello to you as well okay let's see what it output wow okay 15 agents looks like they all converged to this height Network topology water level distribution so this is the occupancy histogram of what water of what through the simulation duration where it was at so as those watching live or rewatching can see we started just just a couple minutes ago with that kind of long esoteric is prompt and then we just had to one or two times just say fix it and then on the third try we're totally in the game now comprehensively improve this have the have a configuration file at top level of folder for easy modification Ure there are many kinds and comprehensive approaches to visualization including animations do SK okay X Q wrote what's the game okay environment as third parent very interesting okay let's look at this config file while path Network looks through how it's going to implemented okay we have number of notes connectivity fraction weighted connectivity Dynamic topology true or false topology update interval then we have by interesting analogy possibly to the micro miso macro three- layer nested simulation from the biofirm we have these three nested sinewave components these are like three hierarchical dynamical Contin ous components and then total time steps save intervals agent parameters for a sine wave tailor approximation of two might be totally enough because basically just following the gradient but then you could imagine depending on the inertia of the agents um maybe it can't turn fast enough and so that's interesting like which of the small medium and large sine waves will depending on the delta T the the step integration that each agent does there's so many interesting Dynamics again so many that kind of the move is these plain text generative formats being because they are wildly deterministically and probabilistically interactive okay let's let it finish its process yeah it's like detecting what Linux subtype I'm using I'll never tell you um and it that might be relevant but again plain text GitHub repo use it or whatever all right so we'll delete those outputs okay got some ways along and then maybe it [Music] um doesn't have this package um wow though yeah a lot of fun hopefully useful um people can go to the doxology cognitive repo but this is just something that took a few hours over the last several days so for those interested in the possibility for collaboration on this through the active inference Institute let's do that in a real repo that's not just many many sandboxes we can copy stuff out you can just copy all the markdown files for obsidian and and transfer it over um um we can set up that knowledge repo and we can organize it in in different ways so for those who are like huh maybe this could accelerate my learning or research with the time that you save from that acceleration maybe consider getting involved or contributing because we can do a lot together and we can drisk together in ways we couldn't alone either so again if this is interesting or you think like but I just was looking for a Blog that now I see I could just generate locally or semilocally if those are interesting or feeling that you have then I encourage you to collaborate and get involved with active inference Institute and Community because again this is just ad hoc surfing the edge of cursor and my own arbitrary studies but with our own Curiosities and expertise pieces we can have some information environments that have never been seen before so it's take taken a kind of virtual environment strategy I don't know if that's because it's using some graphical visualization method but again not to always return to it that is where the dis intermediation dispatch operator would come into play is here's what packages I like to use for this or here's how you set up a virtual environment this way or in the cursor rules never set up a virtual environment always do it this way or install package or don't install packages but then install package could be a page and then it could be like here's what install packages looks like in Julia here's what it looks like in Python here's what it looks like in this other language and then those kinds of Articles can just be like you you may search and never find the perfect blog explaining how package installation is similar or different in go Julia and python or choose your fourth one or whatever the content might be there it might be behind pay walls or never created it might be tracking and cookies it might be unhealthy in other ways it might do all kinds of weird stuff not that what is output from the llm either should have the the instantaneous Ring Of Truth however it's trained on a lot of that material and so it gets us far in this plain text setting and then if something doesn't work we'll either know or we won't or we'll know when we know and then we can fix it in the plain text format wrapper okay let's see so just that you can only have one of these composers but but the chat even though it's very functionally similar we can do that so let's um make one more random thing let's just do a baseball game here we'll use 03 mini just to use a different model comprehensively write a simulation Manifesto for a baseball game active inference simulation this one see this one's now it's downloading torch 766 megabytes so that's where it's it's some Overkill is happening so I'm going to just stop that one but it could happen plain text but again chat and non clawed models often output their text like here which like okay that was that would have for amazing a month ago but we're in the point where having it in the composer just this is a useful contrast so O3 mini in chat that's the control shift L it did sort of write this summary and action plan for the Bas baseball simulation Manifesto but I think we can expect that the agent mode claw 3.5 is going to be doing a whole lot more okay xzq zq zy wrote interesting I note that the rapper is within the hierarchical structure cool all right with that I will make a last push and then if anybody has any last comments I'll read them from live chat okay last push there's the repo ending of the Stream for there's a lot of fun display um methods too or plane TX can be processed and you can use Network ax you could use cytoscape but the obsidian one is pretty sweet brief little OBS fractal for the fractal enjoyers okay thank you Andrew yes also looking forward to collaborate with the knowledge graph and more xcq the play happens in the field in which the agent is outside of life is a ball game all right thank you all till the next stream enjoy the repo get involved have fun acting first serve leave a comment see what happens in your own hands and more thank you bye [Music]